
package br.com.projeto.dao;

import br.com.projeto.jdbc.ConnectionFactory;
import br.com.projeto.model.Clientes;
import br.com.projeto.model.WebServiceCep;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Pietra
 */
public class ClientesDAO {

    private Connection con;

    public ClientesDAO() {
        this.con = new ConnectionFactory().getConnection();
    }

    // metodos cadastrar clientes
    public void cadastrarCliete(Clientes obj) {
        try {
            // primeiro passo criar o comando mysql
            String sql = "insert into tb_clientes (nome,rg,cpf,email,telefone,celular,cep,endereco,numero,complemento,bairro,cidade,estado)"
                    + " values (?,?,?,?,?,?,?,?,?,?,?,?,?)";

            // segundo passo - connectar o banco de dados e organizar o comando mysql
            PreparedStatement stmt = con.prepareStatement(sql);

            stmt.setString(1, obj.getNome());
            stmt.setString(2, obj.getRg());
            stmt.setString(3, obj.getCpf());
            stmt.setString(4, obj.getEmail());
            stmt.setString(5, obj.getTelefone());
            stmt.setString(6, obj.getCelular());
            stmt.setString(7, obj.getCep());
            stmt.setString(8, obj.getEndereco());
            stmt.setInt(9, obj.getNumero());
            stmt.setString(10, obj.getComplemto());
            stmt.setString(11, obj.getBairro());
            stmt.setString(12, obj.getCidade());
            stmt.setString(13, obj.getUf());

            // terceiro passo - executar o comando sql
            stmt.execute();
            stmt.close();

            JOptionPane.showMessageDialog(null, "Cadastrado com sucesso!");

        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "erro" + erro);
        }

    }

    // metodos alterar clientes
    public void alterarCliete(Clientes obj) {

        try {
            // primeiro passo criar o comando mysql
            String sql = "update tb_clientes set nome=?,rg=?,cpf=?,email=?,telefone=?,celular=?,"
                    + "cep=?,endereco=?,numero=?,complemento=?,bairro=?,cidade=?,estado=? where id=?";

            // segundo passo - connectar o banco de dados e organizar o comando mysql
            PreparedStatement stmt = con.prepareStatement(sql);

            stmt.setString(1, obj.getNome());
            stmt.setString(2, obj.getRg());
            stmt.setString(3, obj.getCpf());
            stmt.setString(4, obj.getEmail());
            stmt.setString(5, obj.getTelefone());
            stmt.setString(6, obj.getCelular());
            stmt.setString(7, obj.getCep());
            stmt.setString(8, obj.getEndereco());
            stmt.setInt(9, obj.getNumero());
            stmt.setString(10, obj.getComplemto());
            stmt.setString(11, obj.getBairro());
            stmt.setString(12, obj.getCidade());
            stmt.setString(13, obj.getUf());
            stmt.setInt(14, obj.getId());

            // terceiro passo - executar o comando sql
            stmt.execute();
            stmt.close();

            JOptionPane.showMessageDialog(null, "Alterado com sucesso!");

        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "erro" + erro);
        }

    }

    // metodos excluir clientes
    public void excluirCliete(Clientes obj) {

        try {
            // primeiro passo criar o comando mysql
            String sql = "delete from tb_clientes where id = ?";

            // segundo passo - connectar o banco de dados e organizar o comando mysql
            PreparedStatement stmt = con.prepareStatement(sql);
            stmt.setInt(1, obj.getId());

            // terceiro passo - executar o comando sql
            stmt.execute();
            stmt.close();

            JOptionPane.showMessageDialog(null, "Excluido com sucesso!");

        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "erro" + erro);
        }

    }

    // metodo listar todos os clientes
    public List<Clientes> listarClientes() {

        try {

            // 1- criar a lista
            List<Clientes> lista = new ArrayList<>();
            // 2- Criar o comando mysql, organizar e executar
            String sql = "select * from tb_clientes";

            PreparedStatement stmt = con.prepareStatement(sql);

            ResultSet rs = stmt.executeQuery();// sempre criar esse objeto e ele reccebe essa execução (sql)

            while (rs.next()) {

                Clientes obj = new Clientes();

                obj.setId(rs.getInt("Id"));
                obj.setNome(rs.getString("Nome"));
                obj.setRg(rs.getString("Rg"));
                obj.setCpf(rs.getString("Cpf"));
                obj.setEmail(rs.getString("Email"));
                obj.setTelefone(rs.getString("Telefone"));
                obj.setCelular(rs.getString("Celular"));
                obj.setCep(rs.getString("Cep"));
                obj.setEndereco(rs.getString("Endereco"));
                obj.setNumero(rs.getInt("Numero"));
                obj.setComplemto(rs.getString("Complemento"));
                obj.setBairro(rs.getString("Bairro"));
                obj.setCidade(rs.getString("Cidade"));
                obj.setUf(rs.getString("estado"));

                lista.add(obj);

            }
            return lista;
        } catch (SQLException erro) {

            JOptionPane.showMessageDialog(null, "Erro" + erro);
            return null;
        }

    }

    //metodo consulta clientes por nome
    public Clientes consultaClientePorNome(String nome) {
        try {
            String sql = "select * from tb_clientes where nome = ?"; //buscar todos os clientes onde o nome corresponde ao parametro

            PreparedStatement stmt = con.prepareStatement(sql);
            stmt.setString(1, nome);

            ResultSet rs = stmt.executeQuery();// sempre criar esse objeto e ele reccebe essa execução (sql)
            Clientes obj = new Clientes();
            if (rs.next()) {

                obj.setId(rs.getInt("Id"));
                obj.setNome(rs.getString("Nome"));
                obj.setRg(rs.getString("Rg"));
                obj.setCpf(rs.getString("Cpf"));
                obj.setEmail(rs.getString("Email"));
                obj.setTelefone(rs.getString("Telefone"));
                obj.setCelular(rs.getString("Celular"));
                obj.setCep(rs.getString("Cep"));
                obj.setEndereco(rs.getString("Endereco"));
                obj.setNumero(rs.getInt("Numero"));
                obj.setComplemto(rs.getString("Complemento"));
                obj.setBairro(rs.getString("Bairro"));
                obj.setCidade(rs.getString("Cidade"));
                obj.setUf(rs.getString("estado"));

            }

            return obj;

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Cliente não encontrado !! ");
            return null;
        }
    }
//metodo de busca por cliente (nome) dos depois implementar a busca com diversos tipos como cpf, numero de celular
    //muda apenas o´parametro "public List<Clientes> BuscaClientesPorNome(String nome)" pelo desejado e o 
    //parametro mysql

    public List<Clientes> BuscaClientesPorNome(String nome) {

        try {

            // 1- criar a lista
            List<Clientes> lista = new ArrayList<>();
            // 2- Criar o comando mysql, organizar e executar
            String sql = "select * from tb_clientes where nome like ?"; //buscar todos os clientes onde o nome corresponde ao parametro

            PreparedStatement stmt = con.prepareStatement(sql);
            stmt.setString(1, nome);
            ResultSet rs = stmt.executeQuery();// sempre criar esse objeto e ele reccebe essa execução (sql)

            while (rs.next()) {

                Clientes obj = new Clientes();

                obj.setId(rs.getInt("Id"));
                obj.setNome(rs.getString("Nome"));
                obj.setRg(rs.getString("Rg"));
                obj.setCpf(rs.getString("Cpf"));
                obj.setEmail(rs.getString("Email"));
                obj.setTelefone(rs.getString("Telefone"));
                obj.setCelular(rs.getString("Celular"));
                obj.setCep(rs.getString("Cep"));
                obj.setEndereco(rs.getString("Endereco"));
                obj.setNumero(rs.getInt("Numero"));
                obj.setComplemto(rs.getString("Complemento"));
                obj.setBairro(rs.getString("Bairro"));
                obj.setCidade(rs.getString("Cidade"));
                obj.setUf(rs.getString("estado"));

                lista.add(obj);

            }
            return lista;
        } catch (SQLException erro) {

            JOptionPane.showMessageDialog(null, "Erro" + erro);
            return null;
        }

    }
// buscar de clientes por email

    public Clientes consultaClientePorEmail(String Email) {
        try {
            String sql = "select * from tb_clientes where email = ?"; //buscar todos os clientes onde o nome corresponde ao parametro

            PreparedStatement stmt = con.prepareStatement(sql);
            stmt.setString(4, Email);

            ResultSet rs = stmt.executeQuery();// sempre criar esse objeto e ele reccebe essa execução (sql)
            Clientes obj1 = new Clientes();
            if (rs.next()) {

                obj1.setId(rs.getInt("Id"));
                obj1.setNome(rs.getString("Nome"));
                obj1.setRg(rs.getString("Rg"));
                obj1.setCpf(rs.getString("Cpf"));
                obj1.setEmail(rs.getString("Email"));
                obj1.setTelefone(rs.getString("Telefone"));
                obj1.setCelular(rs.getString("Celular"));
                obj1.setCep(rs.getString("Cep"));
                obj1.setEndereco(rs.getString("Endereco"));
                obj1.setNumero(rs.getInt("Numero"));
                obj1.setComplemto(rs.getString("Complemento"));
                obj1.setBairro(rs.getString("Bairro"));
                obj1.setCidade(rs.getString("Cidade"));
                obj1.setUf(rs.getString("estado"));

            }

            return obj1;

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Cliente não encontrado !! ");
            return null;
        }
    }

    //busca clientes por Cpf
    public Clientes consultaClientePorCpf(String Cpf) {
        try {
            String sql = "select * from tb_clientes where cpf = ?"; //buscar todos os clientes onde o nome corresponde ao parametro

            PreparedStatement stmt = con.prepareStatement(sql);
            stmt.setString(3, Cpf);

            ResultSet rs = stmt.executeQuery();// sempre criar esse objeto e ele reccebe essa execução (sql)
            Clientes obj = new Clientes();
            if (rs.next()) {

                obj.setId(rs.getInt("Id"));
                obj.setNome(rs.getString("Nome"));
                obj.setRg(rs.getString("Rg"));
                obj.setCpf(rs.getString("Cpf"));
                obj.setEmail(rs.getString("Email"));
                obj.setTelefone(rs.getString("Telefone"));
                obj.setCelular(rs.getString("Celular"));
                obj.setCep(rs.getString("Cep"));
                obj.setEndereco(rs.getString("Endereco"));
                obj.setNumero(rs.getInt("Numero"));
                obj.setComplemto(rs.getString("Complemento"));
                obj.setBairro(rs.getString("Bairro"));
                obj.setCidade(rs.getString("Cidade"));
                obj.setUf(rs.getString("estado"));

            }

            return obj;

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Cliente não encontrado !! ");
            return null;
        }
    }

    //busca por cep 
    public Clientes buscaCep(String cep) {

        WebServiceCep webServiceCep = WebServiceCep.searchCep(cep);

        Clientes obj = new Clientes();

        if (webServiceCep.wasSuccessful()) {
            obj.setEndereco(webServiceCep.getLogradouroFull());
            obj.setCidade(webServiceCep.getCidade());
            obj.setBairro(webServiceCep.getBairro());
            obj.setUf(webServiceCep.getUf());
            //instancia um obj e caso de certo ele preenche com os dados que ele recebe
            return obj;
        } else {
            JOptionPane.showMessageDialog(null, "Erro numero: " + webServiceCep.getResulCode());
            JOptionPane.showMessageDialog(null, "Descrição do erro: " + webServiceCep.getResultText());
            return null;
        }

    }

}
